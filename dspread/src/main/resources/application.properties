#\u8BBE\u7F6Espring-boot \u7F16\u7801\u683C\u5F0F
banner.charset=UTF-8
server.tomcat.uri-encoding=UTF-8
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.messages.encoding=UTF-8
server.port=8083


#spring boot admin  local test
spring.application.name=Admin Client
spring.boot.admin.client.url=http://localhost:8000
management.endpoints.web.exposure.include=*

spring.cloud.sentinel.transport.dashboard=http://127.0.0.1:8718


#log
logging.level.*=ERROR;
#logging.level.org.hibernate.SQL=ERROR
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
logging.path=./log/
logging.appender.stdout=org.apache.logging.ConsoleAppender
logging.appender.stdout.layout=org.apache.logging.PatternLayout
logging.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n
spring.jackson.time-zone=GMT+8
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss

##db
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/dspread?useUnicode=true&characterEncoding=UTF-8&useSSL=false&autoReconnect=true&failOverReadOnly=false
spring.datasource.username=root
spring.datasource.password=Dspread@mysql

#local test
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/dspread?useUnicode=true&characterEncoding=UTF-8&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=root

#jpa
spring.jpa.show-sql=true
spring.jpa.format-sql=true
spring.jpa.use-sql-comments=true
#create, create-drop, update
#spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.naming_strategy = org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# extra hibernate config
#spring.jpa.properties.hibernate.format_sql = true
# Redis数据库索引（默认为0）
spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0
# \u4E0A\u7EBF\u65F6\u53D6\u6D88 cache
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML5
spring.thymeleaf.prefix=classpath:/templates/
# \u4FEE\u6539\u9ED8\u8BA4\u7684\u9759\u6001\u5BFB\u5740\u8D44\u6E90\u76EE\u5F55
spring.resources.static-locations=classpath:/templates/,classpath:/static/
spring.devtools.restart.enabled=true 
spring.http.multipart.maxFileSize=200MB
spring.http.multipart.maxRequestSize=1024MB
# \u8D44\u6E90\u7F13\u5B58\u65F6\u95F4\uFF0C\u5355\u4F4D\u79D2
spring.resources.cache-period=1209600 
# \u5F00\u542Fgzip\u538B\u7F29
spring.resources.chain.gzipped=true 
# \u542F\u7528\u7F13\u5B58, \u4E0A\u7EBF\u65F6\u8BBE\u7F6E\u4E3Atrue
spring.resources.chain.cache=false
#oss
endpoint=http://oss-cn-beijing.aliyuncs.com
accessKeyId=111
accessKeySecret=222
bucketName=222
allowUploadFileType=video,image
#wechat
wx.sharing.appid=wx0a247e107b2bd1c8
wx.sharing.appsecret=34d866abf5dc98e2927ad1c23a8d3ef7
wx.creator.appid=wxa7ac3f31627d0e73
wx.creator.appsecret=0c1c2d6270cf94c9f483df249ef29327
#role
role.sharing.api=USER
role.creator.api=CREATOR


#test spring boot local ssl config
#ssl:
#server.ssl.enabled=true
#server.ssl.key-store-type=JKS
#server.ssl.key-store=classpath:server.jks
#server.ssl.key-store-password=dspread
#server.ssl.key-alias=server
#
#server.ssl.trust-store=classpath:server.jks
#server.ssl.trust-store-password=dspread
#server.ssl.trust-store-provider=SUN
#server.ssl.trust-store-type=JKS
#server.ssl.client-auth=need
## 生成服务端密钥文件localhost.jks
#keytool -genkey -alias server -keyalg RSA -keysize 2048 -sigalg SHA256withRSA -keystore server.jks -dname CN=localhost,OU=Test,O=pkslow,L=Guangzhou,C=CN -validity 731 -storepass dspread -keypass dspread
#
## 导出服务端的cert文件
#keytool -export -alias server -file server.cer -keystore server.jks
#
## 生成客户端的密钥文件client.jks
#keytool -genkey -alias client -keyalg RSA -keysize 2048 -sigalg SHA256withRSA -keystore client.jks -dname CN=client,OU=Test,O=pkslow,L=Guangzhou,C=CN -validity 731 -storepass dspread -keypass dspread
#
## 导出客户端的cert文件
#keytool -export -alias client -file client.cer -keystore client.jks
#
## 把客户端的cert导入到服务端
#keytool -import -alias client -file client.cer -keystore server.jks
#
## 把服务端的cert导入到客户端
#keytool -import -alias server -file server.cer -keystore client.jks
#
## 检验服务端是否具有自己的private key和客户端的cert
#keytool -list -keystore localhost.jks
# 转换JKS格式为P12
#keytool -importkeystore -srckeystore client.jks -destkeystore client.p12 -srcstoretype JKS -deststoretype PKCS12 -srcstorepass dspread -deststorepass dspread -srckeypass dspread -destkeypass dspread -srcalias client -destalias client -noprompt



























